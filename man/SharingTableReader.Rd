% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table-reader.R
\name{SharingTableReader}
\alias{SharingTableReader}
\title{Sharing Table Reader}
\description{
Sharing Table Reader Description: TODO
}
\details{
TODO
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{table}}{Referenced table.}

\item{\code{share}}{Referenced share.}

\item{\code{schema}}{Referenced schema.}

\item{\code{creds}}{Delta sharing credentials.}

\item{\code{endpoint_base}}{Endpoint queries are directed to.}

\item{\code{limit}}{Hint from the client to tell the server how many rows in the
table the client plans to read.}

\item{\code{version}}{Return files as of the specified version of the table.}

\item{\code{predicates}}{List of SQL boolean expressions.}

\item{\code{path}}{Location used for downloading table data.}

\item{\code{last_query}}{Most recent metadata fetched regarding table.}

\item{\code{starting_version}}{The starting version of table changes.}

\item{\code{ending_version}}{The ending version of table changes.}

\item{\code{starting_timestamp}}{The starting timestamp of table changes.}

\item{\code{ending_timestamp}}{The ending timestamp of table changes.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{current_version}}{Get current version of table}

\item{\code{metadata}}{Get table metadata}

\item{\code{table_path}}{Directory where saved data exists for table. This is
an extension of `path` combined with the table ID.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SharingTableReader-new}{\code{SharingTableReader$new()}}
\item \href{#method-SharingTableReader-set_predicate}{\code{SharingTableReader$set_predicate()}}
\item \href{#method-SharingTableReader-set_limit}{\code{SharingTableReader$set_limit()}}
\item \href{#method-SharingTableReader-set_version}{\code{SharingTableReader$set_version()}}
\item \href{#method-SharingTableReader-set_timestamp}{\code{SharingTableReader$set_timestamp()}}
\item \href{#method-SharingTableReader-set_cdf_options}{\code{SharingTableReader$set_cdf_options()}}
\item \href{#method-SharingTableReader-load_tibble}{\code{SharingTableReader$load_tibble()}}
\item \href{#method-SharingTableReader-load_arrow_table}{\code{SharingTableReader$load_arrow_table()}}
\item \href{#method-SharingTableReader-load_duckdb}{\code{SharingTableReader$load_duckdb()}}
\item \href{#method-SharingTableReader-set_download_path}{\code{SharingTableReader$set_download_path()}}
\item \href{#method-SharingTableReader-get_files}{\code{SharingTableReader$get_files()}}
\item \href{#method-SharingTableReader-clone}{\code{SharingTableReader$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-new"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-new}{}}}
\subsection{Method \code{new()}}{
Create a new `SharingTableReader` object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$new(share, schema, table, conn, creds)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{share}}{Share for desired table}

\item{\code{schema}}{schema for desired table}

\item{\code{table}}{table name}

\item{\code{conn}}{DuckDB connection object}

\item{\code{creds}}{Credentials for desired table}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This object should be instantiated via `SharingClient$table(...)`
and not directly.
}

\subsection{Returns}{
A new `SharingTableReader` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-set_predicate"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-set_predicate}{}}}
\subsection{Method \code{set_predicate()}}{
Define Predicate Hints
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$set_predicate(hints)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{hints}}{List of SQL boolean expressions using a [restricted subset](https://github.com/delta-io/delta-sharing/blob/main/PROTOCOL.md#sql-expressions-for-filtering)
of SQL}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
- Filtering files based on the SQL predicates is **Best Effort**.
The server may return files that donâ€™t satisfy the predicates.
- If the server fails to parse one of the SQL predicates, or fails to
evaluate it, the server may skip it.
- Predicate expressions are conjunctive (AND-ed together).
- When absent, the server will return all of files in the table.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-set_limit"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-set_limit}{}}}
\subsection{Method \code{set_limit()}}{
Set Limit
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$set_limit(limit)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{limit}}{Integer, hint from the client to tell the server how many
rows in the table the client plans to read.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-set_version"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-set_version}{}}}
\subsection{Method \code{set_version()}}{
Set Version
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$set_version(version)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{version}}{Integer, an optional version number. If set, will return
files as of the specified version of the table.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This is only supported on tables with change data feed (cdf)
enabled.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-set_timestamp"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-set_timestamp}{}}}
\subsection{Method \code{set_timestamp()}}{
Set Timestamp
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$set_timestamp(timestamp)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{timestamp}}{String, an optional timestamp. If set, will return
files as of the specified timestamp of the table.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This is only supported on tables with change data feed (cdf)
enabled.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-set_cdf_options"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-set_cdf_options}{}}}
\subsection{Method \code{set_cdf_options()}}{
Set CDF Options
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$set_cdf_options(
  starting_version = NULL,
  ending_version = NULL,
  starting_timestamp = NULL,
  ending_timestamp = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{starting_version}}{The starting version of table changes.}

\item{\code{ending_version}}{The ending version of table changes.}

\item{\code{starting_timestamp}}{The starting timestamp of table changes.}

\item{\code{ending_timestamp}}{The ending timestamp of table changes.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This is only supported on tables with change data feed (cdf)
enabled.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-load_tibble"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-load_tibble}{}}}
\subsection{Method \code{load_tibble()}}{
Load as Tibble
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$load_tibble(changes = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{changes}}{Boolean (default: FALSE), determines if table changes are
read instead of returning table as of a given version or time.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A [tibble::tibble] S3 object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-load_arrow_table"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-load_arrow_table}{}}}
\subsection{Method \code{load_arrow_table()}}{
Load as Arrow Table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$load_arrow_table(changes = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{changes}}{Boolean (default: FALSE), determines if table changes are
read instead of returning table as of a given version or time.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A [arrow::Table] or [arrow::Dataset] R6 object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-load_duckdb"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-load_duckdb}{}}}
\subsection{Method \code{load_duckdb()}}{
Load as DuckDB Table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$load_duckdb(changes = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{changes}}{Boolean (default: FALSE), determines if table changes are
read instead of returning table as of a given version or time.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TODO
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-set_download_path"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-set_download_path}{}}}
\subsection{Method \code{set_download_path()}}{
Set Download Path
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$set_download_path(path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{Location to save table files to}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-get_files"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-get_files}{}}}
\subsection{Method \code{get_files()}}{
Get Table Files
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$get_files(changes = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{changes}}{Boolean (default: FALSE), determines if table changes are
read instead of returning table as of a given version or time.
Download Associated Files
Internal function that downloads table files and stores them
on disk.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SharingTableReader-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SharingTableReader-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SharingTableReader$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
